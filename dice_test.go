// dice_test.go

package procedural

import (
	"fmt"
	"testing"
)

func ExampleDice() {
	dice := Dice(1.0)
	fmt.Printf("dice := %v\n", dice)
	// Output:
	// dice := &{{{0 0} 0 0 0 0} <nil> false false false {Vec3(X=0.000000, Y=0.000000, Z=0.000000) Vec3(X=0.000000, Y=0.000000, Z=0.000000)} [] false [{-1 1 -1} {-1 -1 -1} {1 -1 -1} {-1 1 -1} {1 -1 -1} {1 1 -1} {-1 -1 1} {-1 -1 -1} {1 -1 -1} {-1 -1 1} {1 -1 -1} {1 -1 1} {-1 1 1} {-1 1 -1} {-1 -1 -1} {-1 1 1} {-1 -1 -1} {-1 -1 1} {-1 1 1} {-1 1 -1} {1 1 -1} {-1 1 1} {1 1 -1} {1 1 1} {1 1 1} {1 1 -1} {1 -1 -1} {1 1 1} {1 -1 -1} {1 -1 1} {-1 1 1} {-1 -1 1} {1 -1 1} {-1 1 1} {1 -1 1} {1 1 1}] false [] false [{[{0.8333333 1} {0.8333333 0} {1 0} {0.8333333 1} {1 0} {1 1} {0.16666667 0} {0.16666667 1} {0.33333334 1} {0.16666667 0} {0.33333334 1} {0.33333334 0} {0.33333334 0} {0.33333334 1} {0.5 1} {0.33333334 0} {0.5 1} {0.5 0} {0.8333333 0} {0.8333333 1} {0.6666667 1} {0.8333333 0} {0.6666667 1} {0.6666667 0} {0.6666667 0} {0.6666667 1} {0.5 1} {0.6666667 0} {0.5 1} {0.5 0} {0 0} {0 1} {0.16666667 1} {0 0} {0.16666667 1} {0.16666667 0}] false}]}

}

func BenchmarkDice(b *testing.B) {
	for i := 0; i < b.N; i++ {
		_ = Dice(1.0)
	}
}
